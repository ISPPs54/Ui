-- Configuration initiale avec le thème espion
local ui_options = {
    main_color = Color3.fromRGB(0, 153, 255), -- Bleu néon
    min_size = Vector2.new(600, 400),
    toggle_key = Enum.KeyCode.RightShift,
    can_resize = true,
    tween_time = 0.3, -- Temps d'animation fluide
}

-- Destruction de l'ancienne UI si elle existe
do
    local imgui = game:GetService("CoreGui"):FindFirstChild("imgui")
    if imgui then imgui:Destroy() end
end

-- Création des éléments de l'UI
local imgui = Instance.new("ScreenGui")
imgui.Name = "imgui"
imgui.Parent = game:GetService("CoreGui")

local Prefabs = Instance.new("Frame")
Prefabs.Name = "Prefabs"
Prefabs.Parent = imgui
Prefabs.BackgroundColor3 = Color3.new(1, 1, 1)
Prefabs.Size = UDim2.new(0, 100, 0, 100)
Prefabs.Visible = false

local Windows = Instance.new("Frame")
Windows.Name = "Windows"
Windows.Parent = imgui
Windows.BackgroundColor3 = Color3.new(1, 1, 1)
Windows.BackgroundTransparency = 1
Windows.Position = UDim2.new(0, 20, 0, 20)
Windows.Size = UDim2.new(1, 20, 1, -20)

-- Définir tous les prefabs
local Label = Instance.new("TextLabel")
Label.Name = "Label"
Label.Parent = Prefabs
Label.BackgroundColor3 = Color3.new(1, 1, 1)
Label.BackgroundTransparency = 1
Label.Size = UDim2.new(0, 200, 0, 20)
Label.Font = Enum.Font.SourceSansPro
Label.Text = "Label"
Label.TextColor3 = Color3.fromRGB(200, 200, 200)
Label.TextSize = 15
Label.TextXAlignment = Enum.TextXAlignment.Left

local Window = Instance.new("ImageLabel")
Window.Name = "Window"
Window.Parent = Prefabs
Window.Active = true
Window.BackgroundColor3 = Color3.new(1, 1, 1)
Window.BackgroundTransparency = 1
Window.ClipsDescendants = true
Window.Position = UDim2.new(0, 20, 0, 20)
Window.Selectable = true
Window.Size = UDim2.new(0, 600, 0, 400)
Window.Image = "rbxassetid://698052001" -- Dégradé futuriste
Window.ImageColor3 = Color3.fromRGB(10, 10, 10) -- Noir profond
Window.ImageTransparency = 0.8
Window.BorderColor3 = Color3.fromRGB(0, 153, 255)
Window.BorderSizePixel = 1
Window.ScaleType = Enum.ScaleType.Slice
Window.SliceCenter = Rect.new(12, 12, 12, 12)

local Resizer = Instance.new("Frame")
Resizer.Name = "Resizer"
Resizer.Parent = Window
Resizer.Active = true
Resizer.BackgroundColor3 = Color3.new(1, 1, 1)
Resizer.BackgroundTransparency = 1
Resizer.BorderSizePixel = 0
Resizer.Position = UDim2.new(1, -20, 1, -20)
Resizer.Size = UDim2.new(0, 20, 0, 20)

local Bar = Instance.new("Frame")
Bar.Name = "Bar"
Bar.Parent = Window
Bar.BackgroundColor3 = Color3.fromRGB(0, 153, 255)
Bar.BorderSizePixel = 0
Bar.Position = UDim2.new(0, 0, 0, 5)
Bar.Size = UDim2.new(1, 0, 0, 15)

local Toggle = Instance.new("ImageButton")
Toggle.Name = "Toggle"
Toggle.Parent = Bar
Toggle.BackgroundColor3 = Color3.new(1, 1, 1)
Toggle.BackgroundTransparency = 1
Toggle.Position = UDim2.new(0, 5, 0, -2)
Toggle.Size = UDim2.new(0, 20, 0, 20)
Toggle.ZIndex = 2
Toggle.Image = "rbxassetid://4731371541"
Toggle.ImageColor3 = Color3.fromRGB(200, 200, 200)

local Base = Instance.new("ImageLabel")
Base.Name = "Base"
Base.Parent = Bar
Base.BackgroundColor3 = Color3.fromRGB(0, 153, 255)
Base.BorderSizePixel = 0
Base.Position = UDim2.new(0, 0, 0.800000012, 0)
Base.Size = UDim2.new(1, 0, 0, 10)
Base.Image = "rbxassetid://2851926732"
Base.ImageColor3 = Color3.fromRGB(0, 153, 255)
Base.ScaleType = Enum.ScaleType.Slice
Base.SliceCenter = Rect.new(12, 12, 12, 12)

local Top = Instance.new("ImageLabel")
Top.Name = "Top"
Top.Parent = Bar
Top.BackgroundColor3 = Color3.new(1, 1, 1)
Top.BackgroundTransparency = 1
Top.Position = UDim2.new(0, 0, 0, -5)
Top.Size = UDim2.new(1, 0, 0, 10)
Top.Image = "rbxassetid://2851926732"
Top.ImageColor3 = Color3.fromRGB(0, 153, 255)
Top.ScaleType = Enum.ScaleType.Slice
Top.SliceCenter = Rect.new(12, 12, 12, 12)

local Tabs = Instance.new("Frame")
Tabs.Name = "Tabs"
Tabs.Parent = Window
Tabs.BackgroundColor3 = Color3.new(1, 1, 1)
Tabs.BackgroundTransparency = 1
Tabs.Position = UDim2.new(0, 15, 0, 60)
Tabs.Size = UDim2.new(1, -30, 1, -60)

local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Parent = Window
Title.BackgroundColor3 = Color3.new(1, 1, 1)
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 30, 0, 3)
Title.Size = UDim2.new(0, 200, 0, 20)
Title.Font = Enum.Font.SourceSansPro
Title.Text = "SpyNet Interface"
Title.TextColor3 = Color3.fromRGB(0, 153, 255)
Title.TextSize = 16
Title.TextXAlignment = Enum.TextXAlignment.Left

local TabSelection = Instance.new("ImageLabel")
TabSelection.Name = "TabSelection"
TabSelection.Parent = Window
TabSelection.BackgroundColor3 = Color3.new(1, 1, 1)
TabSelection.BackgroundTransparency = 1
TabSelection.Position = UDim2.new(0, 15, 0, 30)
TabSelection.Size = UDim2.new(1, -30, 0, 25)
TabSelection.Visible = false
TabSelection.Image = "rbxassetid://2851929490"
TabSelection.ImageColor3 = Color3.fromRGB(30, 30, 30)
TabSelection.ScaleType = Enum.ScaleType.Slice
TabSelection.SliceCenter = Rect.new(4, 4, 4, 4)

local TabButtons = Instance.new("Frame")
TabButtons.Name = "TabButtons"
TabButtons.Parent = TabSelection
TabButtons.BackgroundColor3 = Color3.new(1, 1, 1)
TabButtons.BackgroundTransparency = 1
TabButtons.Size = UDim2.new(1, 0, 1, 0)

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = TabButtons
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 2)

local Frame = Instance.new("Frame")
Frame.Parent = TabSelection
Frame.BackgroundColor3 = Color3.fromRGB(0, 153, 255)
Frame.BorderColor3 = Color3.fromRGB(0, 153, 255)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0, 0, 1, 0)
Frame.Size = UDim2.new(1, 0, 0, 2)

local Tab = Instance.new("Frame")
Tab.Name = "Tab"
Tab.Parent = Prefabs
Tab.BackgroundColor3 = Color3.new(1, 1, 1)
Tab.BackgroundTransparency = 1
Tab.Size = UDim2.new(1, 0, 1, 0)
Tab.Visible = false

local UIListLayout_2 = Instance.new("UIListLayout")
UIListLayout_2.Parent = Tab
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_2.Padding = UDim.new(0, 5)

local TextBox = Instance.new("TextBox")
TextBox.Parent = Prefabs
TextBox.BackgroundColor3 = Color3.new(1, 1, 1)
TextBox.BackgroundTransparency = 1
TextBox.BorderSizePixel = 0
TextBox.Size = UDim2.new(1, 0, 0, 20)
TextBox.ZIndex = 2
TextBox.Font = Enum.Font.SourceSansPro
TextBox.PlaceholderColor3 = Color3.fromRGB(100, 100, 100)
TextBox.PlaceholderText = "Input Text"
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(200, 200, 200)
TextBox.TextSize = 15

local TextBox_Roundify_4px = Instance.new("ImageLabel")
TextBox_Roundify_4px.Name = "TextBox_Roundify_4px"
TextBox_Roundify_4px.Parent = TextBox
TextBox_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
TextBox_Roundify_4px.BackgroundTransparency = 1
TextBox_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
TextBox_Roundify_4px.Image = "rbxassetid://2851929490"
TextBox_Roundify_4px.ImageColor3 = Color3.fromRGB(30, 30, 30)
TextBox_Roundify_4px.ScaleType = Enum.ScaleType.Slice
TextBox_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

local Slider = Instance.new("ImageLabel")
Slider.Name = "Slider"
Slider.Parent = Prefabs
Slider.BackgroundColor3 = Color3.new(1, 1, 1)
Slider.BackgroundTransparency = 1
Slider.Position = UDim2.new(0, 0, 0.178571433, 0)
Slider.Size = UDim2.new(1, 0, 0, 20)
Slider.Image = "rbxassetid://2851929490"
Slider.ImageColor3 = Color3.fromRGB(30, 30, 30)
Slider.ScaleType = Enum.ScaleType.Slice
Slider.SliceCenter = Rect.new(4, 4, 4, 4)

local Title_2 = Instance.new("TextLabel")
Title_2.Name = "Title"
Title_2.Parent = Slider
Title_2.BackgroundColor3 = Color3.new(1, 1, 1)
Title_2.BackgroundTransparency = 1
Title_2.Position = UDim2.new(0.5, 0, 0.5, -10)
Title_2.Size = UDim2.new(0, 0, 0, 20)
Title_2.ZIndex = 2
Title_2.Font = Enum.Font.SourceSansPro
Title_2.Text = "Slider"
Title_2.TextColor3 = Color3.fromRGB(200, 200, 200)
Title_2.TextSize = 15

local Indicator = Instance.new("ImageLabel")
Indicator.Name = "Indicator"
Indicator.Parent = Slider
Indicator.BackgroundColor3 = Color3.new(1, 1, 1)
Indicator.BackgroundTransparency = 1
Indicator.Size = UDim2.new(0, 0, 0, 20)
Indicator.Image = "rbxassetid://2851929490"
Indicator.ImageColor3 = Color3.fromRGB(0, 153, 255)
Indicator.ScaleType = Enum.ScaleType.Slice
Indicator.SliceCenter = Rect.new(4, 4, 4, 4)

local Value = Instance.new("TextLabel")
Value.Name = "Value"
Value.Parent = Slider
Value.BackgroundColor3 = Color3.new(1, 1, 1)
Value.BackgroundTransparency = 1
Value.Position = UDim2.new(1, -55, 0.5, -10)
Value.Size = UDim2.new(0, 50, 0, 20)
Value.Font = Enum.Font.SourceSansPro
Value.Text = "0%"
Value.TextColor3 = Color3.fromRGB(200, 200, 200)
Value.TextSize = 15

local TextLabel = Instance.new("TextLabel")
TextLabel.Parent = Slider
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(1, -20, -0.75, 0)
TextLabel.Size = UDim2.new(0, 26, 0, 50)
TextLabel.Font = Enum.Font.SourceSansPro
TextLabel.Text = "]"
TextLabel.TextColor3 = Color3.fromRGB(100, 100, 100)
TextLabel.TextSize = 15

local TextLabel_2 = Instance.new("TextLabel")
TextLabel_2.Parent = Slider
TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.Position = UDim2.new(1, -65, -0.75, 0)
TextLabel_2.Size = UDim2.new(0, 26, 0, 50)
TextLabel_2.Font = Enum.Font.SourceSansPro
TextLabel_2.Text = "["
TextLabel_2.TextColor3 = Color3.fromRGB(100, 100, 100)
TextLabel_2.TextSize = 15

local Circle = Instance.new("ImageLabel")
Circle.Name = "Circle"
Circle.Parent = Prefabs
Circle.BackgroundColor3 = Color3.new(1, 1, 1)
Circle.BackgroundTransparency = 1
Circle.Image = "rbxassetid://266543268"
Circle.ImageTransparency = 0.5
Circle.ImageColor3 = Color3.fromRGB(0, 153, 255)

local Dropdown = Instance.new("TextButton")
Dropdown.Name = "Dropdown"
Dropdown.Parent = Prefabs
Dropdown.BackgroundColor3 = Color3.new(1, 1, 1)
Dropdown.BackgroundTransparency = 1
Dropdown.BorderSizePixel = 0
Dropdown.Position = UDim2.new(-0.055555556, 0, 0.0833333284, 0)
Dropdown.Size = UDim2.new(0, 200, 0, 20)
Dropdown.ZIndex = 2
Dropdown.Font = Enum.Font.SourceSansPro
Dropdown.Text = "      Dropdown"
Dropdown.TextColor3 = Color3.fromRGB(200, 200, 200)
Dropdown.TextSize = 15
Dropdown.TextXAlignment = Enum.TextXAlignment.Left

local Indicator_2 = Instance.new("ImageLabel")
Indicator_2.Name = "Indicator"
Indicator_2.Parent = Dropdown
Indicator_2.BackgroundColor3 = Color3.new(1, 1, 1)
Indicator_2.BackgroundTransparency = 1
Indicator_2.Position = UDim2.new(0.899999976, -10, 0.100000001, 0)
Indicator_2.Rotation = -90
Indicator_2.Size = UDim2.new(0, 15, 0, 15)
Indicator_2.ZIndex = 2
Indicator_2.Image = "rbxassetid://4744658743"
Indicator_2.ImageColor3 = Color3.fromRGB(0, 153, 255)

local Box = Instance.new("ImageButton")
Box.Name = "Box"
Box.Parent = Dropdown
Box.BackgroundColor3 = Color3.new(1, 1, 1)
Box.BackgroundTransparency = 1
Box.Position = UDim2.new(0, 0, 0, 25)
Box.Size = UDim2.new(1, 0, 0, 150)
Box.ZIndex = 3
Box.Image = "rbxassetid://2851929490"
Box.ImageColor3 = Color3.fromRGB(30, 30, 30)
Box.ScaleType = Enum.ScaleType.Slice
Box.SliceCenter = Rect.new(4, 4, 4, 4)

local Objects = Instance.new("ScrollingFrame")
Objects.Name = "Objects"
Objects.Parent = Box
Objects.BackgroundColor3 = Color3.new(1, 1, 1)
Objects.BackgroundTransparency = 1
Objects.BorderSizePixel = 0
Objects.Size = UDim2.new(1, 0, 1, 0)
Objects.ZIndex = 3
Objects.CanvasSize = UDim2.new(0, 0, 0, 0)
Objects.ScrollBarThickness = 8

local UIListLayout_4 = Instance.new("UIListLayout")
UIListLayout_4.Parent = Objects
UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder

local TextButton_Roundify_4px = Instance.new("ImageLabel")
TextButton_Roundify_4px.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px.Parent = Dropdown
TextButton_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px.BackgroundTransparency = 1
TextButton_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px.ImageColor3 = Color3.fromRGB(30, 30, 30)
TextButton_Roundify_4px.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

local TabButton = Instance.new("TextButton")
TabButton.Name = "TabButton"
TabButton.Parent = Prefabs
TabButton.BackgroundColor3 = Color3.fromRGB(0, 153, 255)
TabButton.BackgroundTransparency = 1
TabButton.BorderSizePixel = 0
TabButton.Position = UDim2.new(0.185185179, 0, 0, 0)
TabButton.Size = UDim2.new(0, 71, 0, 20)
TabButton.ZIndex = 2
TabButton.Font = Enum.Font.SourceSansPro
TabButton.Text = "Test tab"
TabButton.TextColor3 = Color3.fromRGB(200, 200, 200)
TabButton.TextSize = 15

local TextButton_Roundify_4px_2 = Instance.new("ImageLabel")
TextButton_Roundify_4px_2.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_2.Parent = TabButton
TextButton_Roundify_4px_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_2.BackgroundTransparency = 1
TextButton_Roundify_4px_2.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_2.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_2.ImageColor3 = Color3.fromRGB(30, 30, 30)
TextButton_Roundify_4px_2.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_2.SliceCenter = Rect.new(4, 4, 4, 4)

local Folder = Instance.new("ImageLabel")
Folder.Name = "Folder"
Folder.Parent = Prefabs
Folder.BackgroundColor3 = Color3.new(1, 1, 1)
Folder.BackgroundTransparency = 1
Folder.Position = UDim2.new(0, 0, 0, 50)
Folder.Size = UDim2.new(1, 0, 0, 20)
Folder.Image = "rbxassetid://2851929490"
Folder.ImageColor3 = Color3.fromRGB(30, 30, 30)
Folder.ScaleType = Enum.ScaleType.Slice
Folder.SliceCenter = Rect.new(4, 4, 4, 4)

local Button = Instance.new("TextButton")
Button.Name = "Button"
Button.Parent = Folder
Button.BackgroundColor3 = Color3.fromRGB(0, 153, 255)
Button.BackgroundTransparency = 1
Button.BorderSizePixel = 0
Button.Size = UDim2.new(1, 0, 0, 20)
Button.ZIndex = 2
Button.Font = Enum.Font.SourceSansPro
Button.Text = "      Folder"
Button.TextColor3 = Color3.fromRGB(200, 200, 200)
Button.TextSize = 15
Button.TextXAlignment = Enum.TextXAlignment.Left

local TextButton_Roundify_4px_3 = Instance.new("ImageLabel")
TextButton_Roundify_4px_3.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_3.Parent = Button
TextButton_Roundify_4px_3.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_3.BackgroundTransparency = 1
TextButton_Roundify_4px_3.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_3.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_3.ImageColor3 = Color3.fromRGB(0, 153, 255)
TextButton_Roundify_4px_3.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_3.SliceCenter = Rect.new(4, 4, 4, 4)

local Toggle_2 = Instance.new("ImageLabel")
Toggle_2.Name = "Toggle"
Toggle_2.Parent = Button
Toggle_2.BackgroundColor3 = Color3.new(1, 1, 1)
Toggle_2.BackgroundTransparency = 1
Toggle_2.Position = UDim2.new(0, 5, 0, 0)
Toggle_2.Size = UDim2.new(0, 20, 0, 20)
Toggle_2.Image = "rbxassetid://4731371541"
Toggle_2.ImageColor3 = Color3.fromRGB(200, 200, 200)

local Objects_2 = Instance.new("Frame")
Objects_2.Name = "Objects"
Objects_2.Parent = Folder
Objects_2.BackgroundColor3 = Color3.new(1, 1, 1)
Objects_2.BackgroundTransparency = 1
Objects_2.Position = UDim2.new(0, 10, 0, 25)
Objects_2.Size = UDim2.new(1, -10, 1, -25)
Objects_2.Visible = false

local UIListLayout_5 = Instance.new("UIListLayout")
UIListLayout_5.Parent = Objects_2
UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_5.Padding = UDim.new(0, 5)

local HorizontalAlignment = Instance.new("Frame")
HorizontalAlignment.Name = "HorizontalAlignment"
HorizontalAlignment.Parent = Prefabs
HorizontalAlignment.BackgroundColor3 = Color3.new(1, 1, 1)
HorizontalAlignment.BackgroundTransparency = 1
HorizontalAlignment.Size = UDim2.new(1, 0, 0, 20)

local UIListLayout_6 = Instance.new("UIListLayout")
UIListLayout_6.Parent = HorizontalAlignment
UIListLayout_6.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_6.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_6.Padding = UDim.new(0, 5)

local Console = Instance.new("ImageLabel")
Console.Name = "Console"
Console.Parent = Prefabs
Console.BackgroundColor3 = Color3.new(1, 1, 1)
Console.BackgroundTransparency = 1
Console.Size = UDim2.new(1, 0, 0, 200)
Console.Image = "rbxassetid://2851928141"
Console.ImageColor3 = Color3.fromRGB(0, 0, 0) -- Fond noir terminal
Console.ScaleType = Enum.ScaleType.Slice
Console.SliceCenter = Rect.new(8, 8, 8, 8)

local ScrollingFrame = Instance.new("ScrollingFrame")
ScrollingFrame.Parent = Console
ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Size = UDim2.new(1, 0, 1, 1)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingFrame.ScrollBarThickness = 4

local Source = Instance.new("TextBox")
Source.Name = "Source"
Source.Parent = ScrollingFrame
Source.BackgroundColor3 = Color3.new(1, 1, 1)
Source.BackgroundTransparency = 1
Source.Position = UDim2.new(0, 40, 0, 0)
Source.Size = UDim2.new(1, -40, 0, 10000)
Source.ZIndex = 3
Source.ClearTextOnFocus = false
Source.Font = Enum.Font.Code
Source.MultiLine = true
Source.PlaceholderColor3 = Color3.fromRGB(100, 100, 100)
Source.Text = ""
Source.TextColor3 = Color3.fromRGB(0, 255, 128) -- Vert terminal
Source.TextSize = 15
Source.TextWrapped = true
Source.TextXAlignment = Enum.TextXAlignment.Left
Source.TextYAlignment = Enum.TextYAlignment.Top

local Comments = Instance.new("TextLabel")
Comments.Name = "Comments"
Comments.Parent = Source
Comments.BackgroundColor3 = Color3.new(1, 1, 1)
Comments.BackgroundTransparency = 1
Comments.Size = UDim2.new(1, 0, 1, 0)
Comments.ZIndex = 5
Comments.Font = Enum.Font.Code
Comments.Text = ""
Comments.TextColor3 = Color3.fromRGB(0, 200, 100)
Comments.TextSize = 15
Comments.TextXAlignment = Enum.TextXAlignment.Left
Comments.TextYAlignment = Enum.TextYAlignment.Top

local Globals = Instance.new("TextLabel")
Globals.Name = "Globals"
Globals.Parent = Source
Globals.BackgroundColor3 = Color3.new(1, 1, 1)
Globals.BackgroundTransparency = 1
Globals.Size = UDim2.new(1, 0, 1, 0)
Globals.ZIndex = 5
Globals.Font = Enum.Font.Code
Globals.Text = ""
Globals.TextColor3 = Color3.fromRGB(0, 153, 255)
Globals.TextSize = 15
Globals.TextXAlignment = Enum.TextXAlignment.Left
Globals.TextYAlignment = Enum.TextYAlignment.Top

local Keywords = Instance.new("TextLabel")
Keywords.Name = "Keywords"
Keywords.Parent = Source
Keywords.BackgroundColor3 = Color3.new(1, 1, 1)
Keywords.BackgroundTransparency = 1
Keywords.Size = UDim2.new(1, 0, 1, 0)
Keywords.ZIndex = 5
Keywords.Font = Enum.Font.Code
Keywords.Text = ""
Keywords.TextColor3 = Color3.fromRGB(255, 50, 50)
Keywords.TextSize = 15
Keywords.TextXAlignment = Enum.TextXAlignment.Left
Keywords.TextYAlignment = Enum.TextYAlignment.Top

local RemoteHighlight = Instance.new("TextLabel")
RemoteHighlight.Name = "RemoteHighlight"
RemoteHighlight.Parent = Source
RemoteHighlight.BackgroundColor3 = Color3.new(1, 1, 1)
RemoteHighlight.BackgroundTransparency = 1
RemoteHighlight.Size = UDim2.new(1, 0, 1, 0)
RemoteHighlight.ZIndex = 5
RemoteHighlight.Font = Enum.Font.Code
RemoteHighlight.Text = ""
RemoteHighlight.TextColor3 = Color3.fromRGB(255, 128, 0)
RemoteHighlight.TextSize = 15
RemoteHighlight.TextXAlignment = Enum.TextXAlignment.Left
RemoteHighlight.TextYAlignment = Enum.TextYAlignment.Top

local Strings = Instance.new("TextLabel")
Strings.Name = "Strings"
Strings.Parent = Source
Strings.BackgroundColor3 = Color3.new(1, 1, 1)
Strings.BackgroundTransparency = 1
Strings.Size = UDim2.new(1, 0, 1, 0)
Strings.ZIndex = 5
Strings.Font = Enum.Font.Code
Strings.Text = ""
Strings.TextColor3 = Color3.fromRGB(200, 200, 200)
Strings.TextSize = 15
Strings.TextXAlignment = Enum.TextXAlignment.Left
Strings.TextYAlignment = Enum.TextYAlignment.Top

local Tokens = Instance.new("TextLabel")
Tokens.Name = "Tokens"
Tokens.Parent = Source
Tokens.BackgroundColor3 = Color3.new(1, 1, 1)
Tokens.BackgroundTransparency = 1
Tokens.Size = UDim2.new(1, 0, 1, 0)
Tokens.ZIndex = 5
Tokens.Font = Enum.Font.Code
Tokens.Text = ""
Tokens.TextColor3 = Color3.fromRGB(200, 200, 200)
Tokens.TextSize = 15
Tokens.TextXAlignment = Enum.TextXAlignment.Left
Tokens.TextYAlignment = Enum.TextYAlignment.Top

local Numbers = Instance.new("TextLabel")
Numbers.Name = "Numbers"
Numbers.Parent = Source
Numbers.BackgroundColor3 = Color3.new(1, 1, 1)
Numbers.BackgroundTransparency = 1
Numbers.Size = UDim2.new(1, 0, 1, 0)
Numbers.ZIndex = 4
Numbers.Font = Enum.Font.Code
Numbers.Text = ""
Numbers.TextColor3 = Color3.fromRGB(255, 200, 0)
Numbers.TextSize = 15
Numbers.TextXAlignment = Enum.TextXAlignment.Left
Numbers.TextYAlignment = Enum.TextYAlignment.Top

local Info = Instance.new("TextLabel")
Info.Name = "Info"
Info.Parent = Source
Info.BackgroundColor3 = Color3.new(1, 1, 1)
Info.BackgroundTransparency = 1
Info.Size = UDim2.new(1, 0, 1, 0)
Info.ZIndex = 5
Info.Font = Enum.Font.Code
Info.Text = ""
Info.TextColor3 = Color3.fromRGB(0, 153, 255)
Info.TextSize = 15
Info.TextXAlignment = Enum.TextXAlignment.Left
Info.TextYAlignment = Enum.TextYAlignment.Top

local Lines = Instance.new("TextLabel")
Lines.Name = "Lines"
Lines.Parent = ScrollingFrame
Lines.BackgroundColor3 = Color3.new(1, 1, 1)
Lines.BackgroundTransparency = 1
Lines.BorderSizePixel = 0
Lines.Size = UDim2.new(0, 40, 0, 10000)
Lines.ZIndex = 4
Lines.Font = Enum.Font.Code
Lines.Text = "1\n"
Lines.TextColor3 = Color3.fromRGB(100, 100, 100)
Lines.TextSize = 15
Lines.TextWrapped = true
Lines.TextYAlignment = Enum.TextYAlignment.Top

local ColorPicker = Instance.new("ImageLabel")
ColorPicker.Name = "ColorPicker"
ColorPicker.Parent = Prefabs
ColorPicker.BackgroundColor3 = Color3.new(1, 1, 1)
ColorPicker.BackgroundTransparency = 1
ColorPicker.Size = UDim2.new(0, 180, 0, 110)
ColorPicker.Image = "rbxassetid://2851929490"
ColorPicker.ImageColor3 = Color3.fromRGB(30, 30, 30)
ColorPicker.ScaleType = Enum.ScaleType.Slice
ColorPicker.SliceCenter = Rect.new(4, 4, 4, 4)

local Palette = Instance.new("ImageLabel")
Palette.Name = "Palette"
Palette.Parent = ColorPicker
Palette.BackgroundColor3 = Color3.new(1, 1, 1)
Palette.BackgroundTransparency = 1
Palette.Position = UDim2.new(0.0500000007, 0, 0.0500000007, 0)
Palette.Size = UDim2.new(0, 100, 0, 100)
Palette.Image = "rbxassetid://698052001"
Palette.ScaleType = Enum.ScaleType.Slice
Palette.SliceCenter = Rect.new(4, 4, 4, 4)

local Indicator_3 = Instance.new("ImageLabel")
Indicator_3.Name = "Indicator"
Indicator_3.Parent = Palette
Indicator_3.BackgroundColor3 = Color3.new(1, 1, 1)
Indicator_3.BackgroundTransparency = 1
Indicator_3.Size = UDim2.new(0, 5, 0, 5)
Indicator_3.ZIndex = 2
Indicator_3.Image = "rbxassetid://2851926732"
Indicator_3.ImageColor3 = Color3.fromRGB(0, 153, 255)
Indicator_3.ScaleType = Enum.ScaleType.Slice
Indicator_3.SliceCenter = Rect.new(12, 12, 12, 12)

local Sample = Instance.new("ImageLabel")
Sample.Name = "Sample"
Sample.Parent = ColorPicker
Sample.BackgroundColor3 = Color3.new(1, 1, 1)
Sample.BackgroundTransparency = 1
Sample.Position = UDim2.new(0.800000012, 0, 0.0500000007, 0)
Sample.Size = UDim2.new(0, 25, 0, 25)
Sample.Image = "rbxassetid://2851929490"
Sample.ScaleType = Enum.ScaleType.Slice
Sample.SliceCenter = Rect.new(4, 4, 4, 4)

local Saturation = Instance.new("ImageLabel")
Saturation.Name = "Saturation"
Saturation.Parent = ColorPicker
Saturation.BackgroundColor3 = Color3.new(1, 1, 1)
Saturation.Position = UDim2.new(0.649999976, 0, 0.0500000007, 0)
Saturation.Size = UDim2.new(0, 15, 0, 100)
Saturation.Image = "rbxassetid://3641079629"

local Indicator_4 = Instance.new("Frame")
Indicator_4.Name = "Indicator"
Indicator_4.Parent = Saturation
Indicator_4.BackgroundColor3 = Color3.fromRGB(0, 153, 255)
Indicator_4.BorderSizePixel = 0
Indicator_4.Size = UDim2.new(0, 20, 0, 2)
Indicator_4.ZIndex = 2

local Switch = Instance.new("TextButton")
Switch.Name = "Switch"
Switch.Parent = Prefabs
Switch.BackgroundColor3 = Color3.new(1, 1, 1)
Switch.BackgroundTransparency = 1
Switch.BorderSizePixel = 0
Switch.Position = UDim2.new(0.229411766, 0, 0.20714286, 0)
Switch.Size = UDim2.new(0, 20, 0, 20)
Switch.ZIndex = 2
Switch.Font = Enum.Font.SourceSansPro
Switch.Text = ""
Switch.TextColor3 = Color3.fromRGB(200, 200, 200)
Switch.TextSize = 18

local TextButton_Roundify_4px_4 = Instance.new("ImageLabel")
TextButton_Roundify_4px_4.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_4.Parent = Switch
TextButton_Roundify_4px_4.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_4.BackgroundTransparency = 1
TextButton_Roundify_4px_4.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_4.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_4.ImageColor3 = Color3.fromRGB(0, 153, 255)
TextButton_Roundify_4px_4.ImageTransparency = 0.5
TextButton_Roundify_4px_4.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_4.SliceCenter = Rect.new(4, 4, 4, 4)

local Title_3 = Instance.new("TextLabel")
Title_3.Name = "Title"
Title_3.Parent = Switch
Title_3.BackgroundColor3 = Color3.new(1, 1, 1)
Title_3.BackgroundTransparency = 1
Title_3.Position = UDim2.new(1.20000005, 0, 0, 0)
Title_3.Size = UDim2.new(0, 20, 0, 20)
Title_3.Font = Enum.Font.SourceSansPro
Title_3.Text = "Switch"
Title_3.TextColor3 = Color3.fromRGB(200, 200, 200)
Title_3.TextSize = 15
Title_3.TextXAlignment = Enum.TextXAlignment.Left

local Button_2 = Instance.new("TextButton")
Button_2.Name = "Button"
Button_2.Parent = Prefabs
Button_2.BackgroundColor3 = Color3.fromRGB(0, 153, 255)
Button_2.BackgroundTransparency = 1
Button_2.BorderSizePixel = 0
Button_2.Size = UDim2.new(0, 91, 0, 20)
Button_2.ZIndex = 2
Button_2.Font = Enum.Font.SourceSansPro
Button_2.TextColor3 = Color3.fromRGB(200, 200, 200)
Button_2.TextSize = 15

local TextButton_Roundify_4px_5 = Instance.new("ImageLabel")
TextButton_Roundify_4px_5.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_5.Parent = Button_2
TextButton_Roundify_4px_5.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_5.BackgroundTransparency = 1
TextButton_Roundify_4px_5.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_5.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_5.ImageColor3 = Color3.fromRGB(0, 153, 255)
TextButton_Roundify_4px_5.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_5.SliceCenter = Rect.new(4, 4, 4, 4)

local DropdownButton = Instance.new("TextButton")
DropdownButton.Name = "DropdownButton"
DropdownButton.Parent = Prefabs
DropdownButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
DropdownButton.BorderSizePixel = 0
DropdownButton.Size = UDim2.new(1, 0, 0, 20)
DropdownButton.ZIndex = 3
DropdownButton.Font = Enum.Font.SourceSansPro
DropdownButton.Text = "      Button"
DropdownButton.TextColor3 = Color3.fromRGB(200, 200, 200)
DropdownButton.TextSize = 15
DropdownButton.TextXAlignment = Enum.TextXAlignment.Left

local Keybind = Instance.new("ImageLabel")
Keybind.Name = "Keybind"
Keybind.Parent = Prefabs
Keybind.BackgroundColor3 = Color3.new(1, 1, 1)
Keybind.BackgroundTransparency = 1
Keybind.Size = UDim2.new(0, 200, 0, 20)
Keybind.Image = "rbxassetid://2851929490"
Keybind.ImageColor3 = Color3.fromRGB(30, 30, 30)
Keybind.ScaleType = Enum.ScaleType.Slice
Keybind.SliceCenter = Rect.new(4, 4, 4, 4)

local Title_4 = Instance.new("TextLabel")
Title_4.Name = "Title"
Title_4.Parent = Keybind
Title_4.BackgroundColor3 = Color3.new(1, 1, 1)
Title_4.BackgroundTransparency = 1
Title_4.Size = UDim2.new(0, 0, 1, 0)
Title_4.Font = Enum.Font.SourceSansPro
Title_4.Text = "Keybind"
Title_4.TextColor3 = Color3.fromRGB(200, 200, 200)
Title_4.TextSize = 15
Title_4.TextXAlignment = Enum.TextXAlignment.Left

local Input = Instance.new("TextButton")
Input.Name = "Input"
Input.Parent = Keybind
Input.BackgroundColor3 = Color3.new(1, 1, 1)
Input.BackgroundTransparency = 1
Input.BorderSizePixel = 0
Input.Position = UDim2.new(1, -85, 0, 2)
Input.Size = UDim2.new(0, 80, 1, -4)
Input.ZIndex = 2
Input.Font = Enum.Font.SourceSansPro
Input.Text = "RShift"
Input.TextColor3 = Color3.fromRGB(200, 200, 200)
Input.TextSize = 12
Input.TextWrapped = true

local Input_Roundify_4px = Instance.new("ImageLabel")
Input_Roundify_4px.Name = "Input_Roundify_4px"
Input_Roundify_4px.Parent = Input
Input_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
Input_Roundify_4px.BackgroundTransparency = 1
Input_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
Input_Roundify_4px.Image = "rbxassetid://2851929490"
Input_Roundify_4px.ImageColor3 = Color3.fromRGB(30, 30, 30)
Input_Roundify_4px.ScaleType = Enum.ScaleType.Slice
Input_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

-- Logique principale
local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RS = game:GetService("RunService")
local SoundService = game:GetService("SoundService")
local ps = game:GetService("Players")

local p = ps.LocalPlayer
local mouse = p:GetMouse()

-- Effets sonores
local clickSound = Instance.new("Sound")
clickSound.SoundId = "rbxassetid://9120386436" -- Clic futuriste
clickSound.Parent = SoundService

local swooshSound = Instance.new("Sound")
swooshSound.SoundId = "rbxassetid://9120386437" -- Swoosh
swooshSound.Parent = SoundService

local checks = {
    ["binding"] = false,
}

UIS.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == ui_options.toggle_key then
        if not checks.binding then
            imgui.Enabled = not imgui.Enabled
        end
    end
end)

local function Resize(part, new, _delay)
    _delay = _delay or ui_options.tween_time
    local tweenInfo = TweenInfo.new(_delay, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(part, tweenInfo, new)
    tween:Play()
end

local function rgbtohsv(r, g, b)
    r, g, b = r / 255, g / 255, b / 255
    local max, min = math.max(r, g, b), math.min(r, g, b)
    local h, s, v
    v = max
    local d = max - min
    s = max == 0 and 0 or d / max
    if max == min then
        h = 0
    else
        if max == r then
            h = (g - b) / d + (g < b and 6 or 0)
        elseif max == g then
            h = (b - r) / d + 2
        elseif max == b then
            h = (r - g) / d + 4
        end
        h = h / 6
    end
    return h, s, v
end

local function gNameLen(obj)
    return obj.TextBounds.X + 15
end

local function gMouse()
    return Vector2.new(UIS:GetMouseLocation().X + 1, UIS:GetMouseLocation().Y - 35)
end

local function pulse(button, x, y)
    spawn(function()
        button.ClipsDescendants = true
        local pulse = Prefabs:FindFirstChild("Circle"):Clone()
        pulse.Parent = button
        pulse.ZIndex = 1000
        pulse.ImageColor3 = Color3.fromRGB(0, 153, 255)
        pulse.ImageTransparency = 0.5
        local new_x = x - pulse.AbsolutePosition.X
        local new_y = y - pulse.AbsolutePosition.Y
        pulse.Position = UDim2.new(0, new_x, 0, new_y)
        local size = button.AbsoluteSize.X * 2
        pulse:TweenSizeAndPosition(
            UDim2.new(0, size, 0, size),
            UDim2.new(0.5, -size / 2, 0.5, -size / 2),
            "Out", "Quad", 0.3
        )
        Resize(pulse, {ImageTransparency = 1}, 0.3)
        wait(0.3)
        pulse:Destroy()
    end)
end

local windows = 0
local library = {}

local function format_windows()
    local ull = Instance.new("UIListLayout")
    ull.Parent = Windows
    local data = {}
    for i, v in next, Windows:GetChildren() do
        if not v:IsA("UIListLayout") then
            data[v] = v.AbsolutePosition
        end
    end
    ull:Destroy()
    for i, v in next, data do
        i.Position = UDim2.new(0, v.X, 0, v.Y)
    end
end

function library:FormatWindows()
    format_windows()
end

function library:AddWindow(title, options)
    windows = windows + 1
    local dropdown_open = false
    title = tostring(title or "SpyNet Interface")
    options = options or ui_options

    local Window = Prefabs:FindFirstChild("Window"):Clone()
    Window.Parent = Windows
    Window:FindFirstChild("Title").Text = title
    Window.Size = UDim2.new(0, options.min_size.X, 0, options.min_size.Y)
    Window.ZIndex = Window.ZIndex + (windows * 10)

    local function updateColors()
        local Bar = Window:FindFirstChild("Bar")
        local Base = Bar:FindFirstChild("Base")
        local Top = Bar:FindFirstChild("Top")
        local SplitFrame = Window:FindFirstChild("TabSelection"):FindFirstChild("Frame")
        Bar.BackgroundColor3 = options.main_color
        Base.BackgroundColor3 = options.main_color
        Base.ImageColor3 = options.main_color
        Top.ImageColor3 = options.main_color
        SplitFrame.BackgroundColor3 = options.main_color
    end
    updateColors()

    local Resizer = Window:WaitForChild("Resizer")
    local window_data = {}
    Window.Draggable = true

    -- Resize Window
    local oldIcon = mouse.Icon
    local Entered = false
    Resizer.MouseEnter:Connect(function()
        Window.Draggable = false
        if options.can_resize then
            oldIcon = mouse.Icon
        end
        Entered = true
    end)

    Resizer.MouseLeave:Connect(function()
        Entered = false
        if options.can_resize then
            mouse.Icon = oldIcon
        end
        Window.Draggable = true
    end)

    local Held = false
    UIS.InputBegan:Connect(function(inputObject)
        if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
            Held = true
            spawn(function()
                if Entered and Resizer.Active and options.can_resize then
                    while Held and Resizer.Active do
                        local mouse_location = gMouse()
                        local x = mouse_location.X - Window.AbsolutePosition.X
                        local y = mouse_location.Y - Window.AbsolutePosition.Y
                        if x >= options.min_size.X and y >= options.min_size.Y then
                            Resize(Window, {Size = UDim2.new(0, x, 0, y)}, options.tween_time)
                        elseif x >= options.min_size.X then
                            Resize(Window, {Size = UDim2.new(0, x, 0, options.min_size.Y)}, options.tween_time)
                        elseif y >= options.min_size.Y then
                            Resize(Window, {Size = UDim2.new(0, options.min_size.X, 0, y)}, options.tween_time)
                        else
                            Resize(Window, {Size = UDim2.new(0, options.min_size.X, 0, options.min_size.Y)}, options.tween_time)
                        end
                        RS.Heartbeat:Wait()
                    end
                end
            end)
        end
    end)
    UIS.InputEnded:Connect(function(inputObject)
        if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
            Held = false
        end
    end)

    -- Open/Close Window
    local open_close = Window:FindFirstChild("Bar"):FindFirstChild("Toggle")
    local open = true
    local canopen = true
    local oldwindowdata = {}
    local oldy = Window.AbsoluteSize.Y

    local function openWindow()
        Window.ImageTransparency = 1
        Resize(Window, {ImageTransparency = 0.8}, 0.5)
        swooshSound:Play()
    end

    open_close.MouseButton1Click:Connect(function()
        if canopen then
            canopen = false
            if open then
                oldwindowdata = {}
                for i, v in next, Window:FindFirstChild("Tabs"):GetChildren() do
                    oldwindowdata[v] = v.Visible
                    v.Visible = false
                end
                Resizer.Active = false
                oldy = Window.AbsoluteSize.Y
                Resize(open_close, {Rotation = 0}, options.tween_time)
                Resize(Window, {Size = UDim2.new(0, Window.AbsoluteSize.X, 0, 26)}, options.tween_time)
                open_close.Parent:FindFirstChild("Base").Transparency = 1
            else
                for i, v in next, oldwindowdata do
                    i.Visible = v
                end
                Resizer.Active = true
                openWindow()
                Resize(open_close, {Rotation = 90}, options.tween_time)
                Resize(Window, {Size = UDim2.new(0, Window.AbsoluteSize.X, 0, oldy)}, options.tween_time)
                open_close.Parent:FindFirstChild("Base").Transparency = 0
            end
            open = not open
            wait(options.tween_time)
            canopen = true
        end
    end)

    -- UI Elements
    local tabs = Window:FindFirstChild("Tabs")
    local tab_selection = Window:FindFirstChild("TabSelection")
    local tab_buttons = tab_selection:FindFirstChild("TabButtons")

    function window_data:AddTab(tab_name)
        local tab_data = {}
        tab_name = tostring(tab_name or "New Tab")
        tab_selection.Visible = true

        local new_button = Prefabs:FindFirstChild("TabButton"):Clone()
        new_button.Parent = tab_buttons
        new_button.Text = tab_name
        new_button.Size = UDim2.new(0, gNameLen(new_button), 0, 20)
        new_button.ZIndex = new_button.ZIndex + (windows * 10)
        new_button:GetChildren()[1].ZIndex = new_button:GetChildren()[1].ZIndex + (windows * 10)

        local new_tab = Prefabs:FindFirstChild("Tab"):Clone()
        new_tab.Parent = tabs
        new_tab.ZIndex = new_tab.ZIndex + (windows * 10)

        local function show()
            if dropdown_open then return end
            for i, v in next, tab_buttons:GetChildren() do
                if not v:IsA("UIListLayout") then
                    v:GetChildren()[1].ImageColor3 = Color3.fromRGB(30, 30, 30)
                    Resize(v, {Size = UDim2.new(0, v.AbsoluteSize.X, 0, 20)}, options.tween_time)
                end
            end
            for i, v in next, tabs:GetChildren() do
                v.Visible = false
            end
            Resize(new_button, {Size = UDim2.new(0, new_button.AbsoluteSize.X, 0, 25)}, options.tween_time)
            new_button:GetChildren()[1].ImageColor3 = Color3.fromRGB(0, 153, 255)
            new_tab.Visible = true
        end

        new_button.MouseButton1Click:Connect(function()
            clickSound:Play()
            show()
        end)

        function tab_data:Show()
            show()
        end

        -- Tab Elements
        function tab_data:AddLabel(label_text)
            label_text = tostring(label_text or "New Label")
            local label = Prefabs:FindFirstChild("Label"):Clone()
            label.Parent = new_tab
            label.Text = label_text
            label.Size = UDim2.new(0, gNameLen(label), 0, 20)
            label.ZIndex = label.ZIndex + (windows * 10)
            return label
        end

        function tab_data:AddButton(button_text, callback)
            button_text = tostring(button_text or "New Button")
            callback = typeof(callback) == "function" and callback or function() end

            local button = Prefabs:FindFirstChild("Button"):Clone()
            button.Parent = new_tab
            button.Text = button_text
            button.Size = UDim2.new(0, gNameLen(button), 0, 20)
            button.ZIndex = button.ZIndex + (windows * 10)
            button:GetChildren()[1].ZIndex = button:GetChildren()[1].ZIndex + (windows * 10)

            button.MouseEnter:Connect(function()
                button:GetChildren()[1].ImageColor3 = Color3.fromRGB(50, 180, 255)
            end)
            button.MouseLeave:Connect(function()
                button:GetChildren()[1].ImageColor3 = options.main_color
            end)

            button.MouseButton1Click:Connect(function()
                clickSound:Play()
                pulse(button, mouse.X, mouse.Y)
                pcall(callback)
            end)

            return button
        end

        function tab_data:AddSwitch(switch_text, callback)
            local switch_data = {}
            switch_text = tostring(switch_text or "New Switch")
            callback = typeof(callback) == "function" and callback or function() end

            local switch = Prefabs:FindFirstChild("Switch"):Clone()
            switch.Parent = new_tab
            switch:FindFirstChild("Title").Text = switch_text
            switch:FindFirstChild("Title").ZIndex = switch:FindFirstChild("Title").ZIndex + (windows * 10)
            switch.ZIndex = switch.ZIndex + (windows * 10)
            switch:GetChildren()[1].ZIndex = switch:GetChildren()[1].ZIndex + (windows * 10)

            local toggled = false
            switch.MouseButton1Click:Connect(function()
                clickSound:Play()
                toggled = not toggled
                switch.Text = toggled and utf8.char(10003) or ""
                pcall(callback, toggled)
            end)

            function switch_data:Set(bool)
                toggled = typeof(bool) == "boolean" and bool or false
                switch.Text = toggled and utf8.char(10003) or ""
                pcall(callback, toggled)
            end

            return switch_data, switch
        end

        function tab_data:AddTextBox(textbox_text, callback, textbox_options)
            textbox_text = tostring(textbox_text or "New TextBox")
            callback = typeof(callback) == "function" and callback or function() end
            textbox_options = typeof(textbox_options) == "table" and textbox_options or {clear = true}
            textbox_options = {clear = textbox_options.clear == true}

            local textbox = Prefabs:FindFirstChild("TextBox"):Clone()
            textbox.Parent = new_tab
            textbox.PlaceholderText = textbox_text
            textbox.ZIndex = textbox.ZIndex + (windows * 10)
            textbox:GetChildren()[1].ZIndex = textbox:GetChildren()[1].ZIndex + (windows * 10)

            textbox.FocusLost:Connect(function(ep)
                if ep and #textbox.Text > 0 then
                    pcall(callback, textbox.Text)
                    if textbox_options.clear then
                        textbox.Text = ""
                    end
                end
            end)

            return textbox
        end

        function tab_data:AddSlider(slider_text, callback, slider_options)
            local slider_data = {}
            slider_text = tostring(slider_text or "New Slider")
            callback = typeof(callback) == "function" and callback or function() end
            slider_options = typeof(slider_options) == "table" and slider_options or {}
            slider_options = {
                min = slider_options.min or 0,
                max = slider_options.max or 100,
                readonly = slider_options.readonly or false,
            }

            local slider = Prefabs:FindFirstChild("Slider"):Clone()
            slider.Parent = new_tab
            slider.ZIndex = slider.ZIndex + (windows * 10)

            local title = slider:FindFirstChild("Title")
            local indicator = slider:FindFirstChild("Indicator")
            local value = slider:FindFirstChild("Value")
            title.ZIndex = title.ZIndex + (windows * 10)
            indicator.ZIndex = indicator.ZIndex + (windows * 10)
            value.ZIndex = value.ZIndex + (windows * 10)
            title.Text = slider_text

            local Entered = false
            slider.MouseEnter:Connect(function()
                Entered = true
                Window.Draggable = false
            end)
            slider.MouseLeave:Connect(function()
                Entered = false
                Window.Draggable = true
            end)

            local Held = false
            UIS.InputBegan:Connect(function(inputObject)
                if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
                    Held = true
                    spawn(function()
                        if Entered and not slider_options.readonly then
                            while Held and not dropdown_open do
                                local mouse_location = gMouse()
                                local x = (slider.AbsoluteSize.X - (slider.AbsoluteSize.X - ((mouse_location.X - slider.AbsolutePosition.X)) + 1)) / slider.AbsoluteSize.X
                                local min = 0
                                local max = 1
                                local size = math.clamp(x, min, max)
                                Resize(indicator, {Size = UDim2.new(size, 0, 0, 20)}, options.tween_time)
                                local p = math.floor(size * 100)
                                local maxv = slider_options.max
                                local minv = slider_options.min
                                local sel_value = math.floor(((maxv - minv) / 100) * p + minv)
                                value.Text = tostring(sel_value)
                                pcall(callback, sel_value)
                                RS.Heartbeat:Wait()
                            end
                        end
                    end)
                end
            end)
            UIS.InputEnded:Connect(function(inputObject)
                if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
                    Held = false
                end
            end)

            function slider_data:Set(new_value)
                new_value = tonumber(new_value) or 0
                new_value = math.clamp(new_value, slider_options.min, slider_options.max)
                local p = (new_value - slider_options.min) / (slider_options.max - slider_options.min)
                Resize(indicator, {Size = UDim2.new(p, 0, 0, 20)}, options.tween_time)
                value.Text = tostring(new_value)
                pcall(callback, new_value)
            end

            slider_data:Set(slider_options.min)
            return slider_data, slider
        end

        function tab_data:AddKeybind(keybind_name, callback, keybind_options)
            local keybind_data = {}
            keybind_name = tostring(keybind_name or "New Keybind")
            callback = typeof(callback) == "function" and callback or function() end
            keybind_options = typeof(keybind_options) == "table" and keybind_options or {}
            keybind_options = {standard = keybind_options.standard or Enum.KeyCode.RightShift}

            local keybind = Prefabs:FindFirstChild("Keybind"):Clone()
            local input = keybind:FindFirstChild("Input")
            local title = keybind:FindFirstChild("Title")
            keybind.ZIndex = keybind.ZIndex + (windows * 10)
            input.ZIndex = input.ZIndex + (windows * 10)
            input:GetChildren()[1].ZIndex = input:GetChildren()[1].ZIndex + (windows * 10)
            title.ZIndex = title.ZIndex + (windows * 10)

            keybind.Parent = new_tab
            title.Text = "  " .. keybind_name
            keybind.Size = UDim2.new(0, gNameLen(title) + 80, 0, 20)

            local shortkeys = {
                RightControl = "RightCtrl",
                LeftControl = "LeftCtrl",
                LeftShift = "LShift",
                RightShift = "RShift",
                MouseButton1 = "Mouse1",
                MouseButton2 = "Mouse2",
            }

            local keybind = keybind_options.standard
            function keybind_data:SetKeybind(Keybind)
                local key = shortkeys[Keybind.Name] or Keybind.Name
                input.Text = key
                keybind = Keybind
            end

            UIS.InputBegan:Connect(function(a, b)
                if checks.binding then
                    spawn(function()
                        wait()
                        checks.binding = false
                    end)
                    return
                end
                if a.KeyCode == keybind and not b then
                    pcall(callback, keybind)
                end
            end)

            keybind_data:SetKeybind(keybind_options.standard)
            input.MouseButton1Click:Connect(function()
                if checks.binding then return end
                input.Text = "..."
                checks.binding = true
                local a = UIS.InputBegan:Wait()
                keybind_data:SetKeybind(a.KeyCode)
            end)

            return keybind_data, keybind
        end

        function tab_data:AddDropdown(dropdown_name, callback)
            local dropdown_data = {}
            dropdown_name = tostring(dropdown_name or "New Dropdown")
            callback = typeof(callback) == "function" and callback or function() end

            local dropdown = Prefabs:FindFirstChild("Dropdown"):Clone()
            local box = dropdown:FindFirstChild("Box")
            local objects = box:FindFirstChild("Objects")
            local indicator = dropdown:FindFirstChild("Indicator")
            dropdown.ZIndex = dropdown.ZIndex + (windows * 10)
            box.ZIndex = box.ZIndex + (windows * 10)
            objects.ZIndex = objects.ZIndex + (windows * 10)
            indicator.ZIndex = indicator.ZIndex + (windows * 10)
            dropdown:GetChildren()[3].ZIndex = dropdown:GetChildren()[3].ZIndex + (windows * 10)

            dropdown.Parent = new_tab
            dropdown.Text = "      " .. dropdown_name
            box.Size = UDim2.new(1, 0, 0, 0)

            local function resizeDropdown(size, rotation)
                local tweenInfo = TweenInfo.new(options.tween_time, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out)
                local tween = TweenService:Create(box, tweenInfo, {Size = size})
                tween:Play()
                Resize(indicator, {Rotation = rotation}, options.tween_time)
            end

            local open = false
            dropdown.MouseButton1Click:Connect(function()
                clickSound:Play()
                open = not open
                local len = (#objects:GetChildren() - 1) * 20
                if #objects:GetChildren() - 1 >= 10 then
                    len = 10 * 20
                    objects.CanvasSize = UDim2.new(0, 0, (#objects:GetChildren() - 1) * 0.1, 0)
                end
                if open then
                    dropdown_open = true
                    resizeDropdown(UDim2.new(1, 0, 0, len), 0)
                    spawn(function()
                        while open do
                            indicator.ImageTransparency = 0.2
                            wait(0.5)
                            indicator.ImageTransparency = 0
                            wait(0.5)
                        end
                    end)
                else
                    dropdown_open = false
                    resizeDropdown(UDim2.new(1, 0, 0, 0), -90)
                end
            end)

            function dropdown_data:Add(n)
                local object_data = {}
                n = tostring(n or "New Object")
                local object = Prefabs:FindFirstChild("DropdownButton"):Clone()
                object.Parent = objects
                object.Text = n
                object.ZIndex = object.ZIndex + (windows * 10)

                object.MouseEnter:Connect(function()
                    object.BackgroundColor3 = options.main_color
                end)
                object.MouseLeave:Connect(function()
                    object.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                end)

                if open then
                    local len = (#objects:GetChildren() - 1) * 20
                    if #objects:GetChildren() - 1 >= 10 then
                        len = 10 * 20
                        objects.CanvasSize = UDim2.new(0, 0, (#objects:GetChildren() - 1) * 0.1, 0)
                    end
                    resizeDropdown(UDim2.new(1, 0, 0, len), 0)
                end

                object.MouseButton1Click:Connect(function()
                    clickSound:Play()
                    if dropdown_open then
                        dropdown.Text = "      [ " .. n .. " ]"
                        dropdown_open = false
                        open = false
                        resizeDropdown(UDim2.new(1, 0, 0, 0), -90)
                        pcall(callback, n)
                    end
                end)

                function object_data:Remove()
                    object:Destroy()
                end

                return object, object_data
            end

            return dropdown_data, dropdown
        end

        function tab_data:AddColorPicker(callback)
            local color_picker_data = {}
            callback = typeof(callback) == "function" and callback or function() end

            local color_picker = Prefabs:FindFirstChild("ColorPicker"):Clone()
            color_picker.Parent = new_tab
            color_picker.ZIndex = color_picker.ZIndex + (windows * 10)

            local palette = color_picker:FindFirstChild("Palette")
            local sample = color_picker:FindFirstChild("Sample")
            local saturation = color_picker:FindFirstChild("Saturation")
            palette.ZIndex = palette.ZIndex + (windows * 10)
            sample.ZIndex = sample.ZIndex + (windows * 10)
            saturation.ZIndex = saturation.ZIndex + (windows * 10)

            local h, s, v = 0, 1, 1
            local function update()
                local color = Color3.fromHSV(h, s, v)
                sample.ImageColor3 = color
                saturation.ImageColor3 = Color3.fromHSV(h, 1, 1)
                pcall(callback, color)
            end

            local color = Color3.fromHSV(h, s, v)
            sample.ImageColor3 = color
            saturation.ImageColor3 = Color3.fromHSV(h, 1, 1)

            local Entered1, Entered2 = false, false
            palette.MouseEnter:Connect(function()
                Window.Draggable = false
                Entered1 = true
            end)
            palette.MouseLeave:Connect(function()
                Window.Draggable = true
                Entered1 = false
            end)
            saturation.MouseEnter:Connect(function()
                Window.Draggable = false
                Entered2 = true
            end)
            saturation.MouseLeave:Connect(function()
                Window.Draggable = true
                Entered2 = false
            end)

            local palette_indicator = palette:FindFirstChild("Indicator")
            local saturation_indicator = saturation:FindFirstChild("Indicator")
            palette_indicator.ZIndex = palette_indicator.ZIndex + (windows * 10)
            saturation_indicator.ZIndex = saturation_indicator.ZIndex + (windows * 10)

            local Held = false
            UIS.InputBegan:Connect(function(inputObject)
                if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
                    Held = true
                    spawn(function()
                        while Held and Entered1 and not dropdown_open do
                            local mouse_location = gMouse()
                            local x = ((palette.AbsoluteSize.X - (mouse_location.X - palette.AbsolutePosition.X)) + 1)
                            local y = ((palette.AbsoluteSize.Y - (mouse_location.Y - palette.AbsolutePosition.Y)) + 1.5)
                            h = x / 100
                            s = y / 100
                            Resize(palette_indicator, {Position = UDim2.new(0, math.abs(x - 100) - (palette_indicator.AbsoluteSize.X / 2), 0, math.abs(y - 100) - (palette_indicator.AbsoluteSize.Y / 2))}, options.tween_time)
                            update()
                            RS.Heartbeat:Wait()
                        end
                        while Held and Entered2 and not dropdown_open do
                            local mouse_location = gMouse()
                            local y = ((palette.AbsoluteSize.Y - (mouse_location.Y - palette.AbsolutePosition.Y)) + 1.5)
                            v = y / 100
                            Resize(saturation_indicator, {Position = UDim2.new(0, 0, 0, math.abs(y - 100))}, options.tween_time)
                            update()
                            RS.Heartbeat:Wait()
                        end
                    end)
                end
            end)
            UIS.InputEnded:Connect(function(inputObject)
                if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
                    Held = false
                end
            end)

            function color_picker_data:Set(color)
                color = typeof(color) == "Color3" and color or Color3.new(1, 1, 1)
                h, s, v = rgbtohsv(color.R * 255, color.G * 255, color.B * 255)
                sample.ImageColor3 = color
                saturation.ImageColor3 = Color3.fromHSV(h, 1, 1)
                Resize(palette_indicator, {Position = UDim2.new(0, (h * 100) - (palette_indicator.AbsoluteSize.X / 2), 0, (s * 100) - (palette_indicator.AbsoluteSize.Y / 2))}, options.tween_time)
                Resize(saturation_indicator, {Position = UDim2.new(0, 0, 0, (v * 100))}, options.tween_time)
                pcall(callback, color)
            end

            return color_picker_data, color_picker
        end

        function tab_data:AddConsole(console_options)
            console_options = typeof(console_options) == "table" and console_options or {readonly = false}
            console_options = {
                readonly = console_options.readonly == true,
                source = console_options.source or "Lua",
            }

            local console = Prefabs:FindFirstChild("Console"):Clone()
            console.Parent = new_tab
            console.ZIndex = console.ZIndex + (windows * 10)
            local source = console:FindFirstChild("Source")
            local lines = source:FindFirstChild("Lines")
            source.ZIndex = source.ZIndex + (windows * 10)
            lines.ZIndex = lines.ZIndex + (windows * 10)

            source.TextEditable = not console_options.readonly
            spawn(function()
                while true do
                    source.TextTransparency = 0.1
                    wait(math.random(1, 3))
                    source.TextTransparency = 0
                    wait(0.1)
                end
            end)

            if console_options.source == "Lua" then
                local function format(str)
                    str = str:gsub("\n", " ")
                    str = str:gsub("\t", " ")
                    return str
                end

                local keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
                local globals = {"getfenv", "setfenv", "loadstring", "pcall", "xpcall", "rawset", "rawget", "tonumber", "tostring", "type", "unpack", "next", "pairs", "ipairs", "error", "metatable", "require"}
                local comments, strings, numbers, tokens = "", "", "", ""
                local last_line_count = 1

                source:GetPropertyChangedSignal("Text"):Connect(function()
                    local text = source.Text
                    local line_count = 1
                    for _ in text:gmatch("\n") do
                        line_count = line_count + 1
                    end

                    if line_count ~= last_line_count then
                        lines.Text = ""
                        for i = 1, line_count do
                            lines.Text = lines.Text .. tostring(i) .. "\n"
                        end
                        last_line_count = line_count
                    end

                    comments = ""
                    strings = ""
                    numbers = ""
                    tokens = ""
                    local _keywords = ""
                    local _globals = ""

                    for _, word in ipairs(keywords) do
                        _keywords = _keywords .. word .. "|"
                    end
                    for _, word in ipairs(globals) do
                        _globals = _globals .. word .. "|"
                    end
                    _keywords = _keywords:sub(1, -2)
                    _globals = _globals:sub(1, -2)
